# -*- coding: utf-8 -*-
"""coba-coba

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nO2cts0I5Gv5fv69iQDakBD_j4jxhWoI
"""

a = 1
loop = ""
while(a <= 100):

  from tabulate import tabulate
  import itertools as it

  def konversi(angka, pembagi):
    hasil = []
    hasilakhir = ""
    loop = True
    while loop:
      if angka >= pembagi:
        hasil.append(angka)
        sisa = angka % pembagi
        angka = angka // pembagi
        if sisa > 9:
          huruf = libChar(sisa)
          hasilakhir += huruf
          sisa = "{0} = {1}".format(sisa, huruf)
        else:
          hasilakhir += str(sisa)
        divid = "{0}------ {1}".format(pembagi, sisa)
        hasil.append(divid)
      else:
        if angka > 9:
          angka = libChar(angka)
        hasilakhir += str(angka)
        hasil.append(angka)
        loop = False
        break
      hasil.append("")
    hasilakhir = "".join(reversed(hasilakhir)) #reversed
    return (hasil, hasilakhir)

  def libChar(angka):
    if angka == 10:
      return "A"
    elif angka == 11:
      return "B"
    elif angka == 12:
      return "C"
    elif angka == 13:
      return "D"
    elif angka == 14:
      return "E"
    elif angka == 15:
      return "F"

  angka = int(input("\nMasukkan bilangan yang akan dikonversi: "))

  biner, hasilbiner = konversi(angka, 2)
  octal, hasiloctal = konversi(angka, 8)
  hexa, hasilhexa = konversi(angka, 16)

  table = list(it.zip_longest(biner, octal, hexa))

  header = ("Binner", "Octal", "Hexadecimal")

  print("\n", tabulate(table, header, tablefmt = "plain"))
  print("")
  print("==============================================================")
  print("==                         HASIL                            ==")
  print("==============================================================\n")
  print("Binner : ", hasilbiner)
  print("Octal  : ", hasiloctal)
  print("Hexa   : ", hasilhexa)

  a += 1
  loop = input("\nApakah ingin keluar (Y/T): ")
  if (loop == "Y" or loop == "y"):
    break